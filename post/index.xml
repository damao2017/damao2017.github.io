<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on damao&#39;s blog</title>
    <link>https://damao2017.github.io/post/</link>
    <description>Recent content in Posts on damao&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>&amp;copy; 9012. All rights reserved.</copyright>
    <lastBuildDate>Sun, 08 Dec 2019 21:30:25 +0800</lastBuildDate>
    
	<atom:link href="https://damao2017.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>json-server使用</title>
      <link>https://damao2017.github.io/post/json-server%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 08 Dec 2019 21:30:25 +0800</pubDate>
      
      <guid>https://damao2017.github.io/post/json-server%E4%BD%BF%E7%94%A8/</guid>
      <description>1.安装 模拟数据，支持RESTful风格，REST风格是，只关心前面的POST，GET`,DELETE,PUT`，后面的链接都一样，无需过多关注
npm install -g json-server ##查看所有命令 json-server --help 2.启动 在任意位置创建一个db.json文件。里面包含一些数据，在这个数据文件打开cmd，输入json-server --watch db.json即可打开本地网络接口。
{ &amp;#34;list&amp;#34;: [ { &amp;#34;id&amp;#34;: 1, &amp;#34;name&amp;#34;: &amp;#34;张三&amp;#34;, &amp;#34;tel&amp;#34;: &amp;#34;15223810923&amp;#34; }, { &amp;#34;id&amp;#34;: 2, &amp;#34;name&amp;#34;: &amp;#34;李四&amp;#34;, &amp;#34;tel&amp;#34;: &amp;#34;15223810923&amp;#34; }, { &amp;#34;id&amp;#34;: 3, &amp;#34;name&amp;#34;: &amp;#34;王二&amp;#34;, &amp;#34;tel&amp;#34;: &amp;#34;15223810923&amp;#34; }, { &amp;#34;id&amp;#34;: 4, &amp;#34;name&amp;#34;: &amp;#34;陈五&amp;#34;, &amp;#34;tel&amp;#34;: &amp;#34;15223810923&amp;#34; }, { &amp;#34;name&amp;#34;: &amp;#34;赵六&amp;#34;, &amp;#34;tel&amp;#34;: &amp;#34;123454323&amp;#34;, &amp;#34;id&amp;#34;: 5 }, { &amp;#34;name&amp;#34;: &amp;#34;赵六&amp;#34;, &amp;#34;tel&amp;#34;: &amp;#34;123454323&amp;#34;, &amp;#34;id&amp;#34;: 6 }, { &amp;#34;name&amp;#34;: &amp;#34;赵六&amp;#34;, &amp;#34;tel&amp;#34;: &amp;#34;123454323&amp;#34;, &amp;#34;id&amp;#34;: 7 } ], &amp;#34;users&amp;#34;: [ { &amp;#34;id&amp;#34;: 1, &amp;#34;name&amp;#34;: &amp;#34;陈五&amp;#34;, &amp;#34;sex&amp;#34;:&amp;#34;male&amp;#34;, &amp;#34;tel&amp;#34;: &amp;#34;12345678&amp;#34;, &amp;#34;auther&amp;#34;:{ &amp;#34;name&amp;#34;:&amp;#34;陈五&amp;#34;, &amp;#34;age&amp;#34;:&amp;#34;25&amp;#34; } }, { &amp;#34;id&amp;#34;: 2, &amp;#34;name&amp;#34;: &amp;#34;王二&amp;#34;, &amp;#34;sex&amp;#34;:&amp;#34;male&amp;#34;, &amp;#34;tel&amp;#34;: &amp;#34;15223810923&amp;#34;, &amp;#34;auther&amp;#34;:{ &amp;#34;name&amp;#34;:&amp;#34;王二&amp;#34;, &amp;#34;age&amp;#34;:&amp;#34;22&amp;#34; } } ], &amp;#34;user&amp;#34;: { &amp;#34;id&amp;#34;: 1, &amp;#34;name&amp;#34;: &amp;#34;陈五&amp;#34;, &amp;#34;tel&amp;#34;: &amp;#34;15223810923&amp;#34; }, &amp;#34;posts&amp;#34;: [ { &amp;#34;id&amp;#34;: 1, &amp;#34;title&amp;#34;: &amp;#34;json-server&amp;#34;, &amp;#34;author&amp;#34;: &amp;#34;typicode&amp;#34; } ], &amp;#34;comments&amp;#34;: [ { &amp;#34;id&amp;#34;: 1, &amp;#34;body&amp;#34;: &amp;#34;some comment&amp;#34;, &amp;#34;postId&amp;#34;: 1 } ], &amp;#34;profile&amp;#34;: { &amp;#34;name&amp;#34;: &amp;#34;typicode&amp;#34; } } 3.</description>
    </item>
    
    <item>
      <title>VUE基础知识</title>
      <link>https://damao2017.github.io/post/vue%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Wed, 04 Dec 2019 17:58:51 +0800</pubDate>
      
      <guid>https://damao2017.github.io/post/vue%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>VUE基础知识 1. 核心概念 双向数据绑定：数据变化，页面上用数据的地方会自动变化
通过 指令 扩展HTML，通过 表达式 绑定数据到HTML
2.VUE的引入方式   本地文件引入
下载vue.js文件，然后html使用&amp;lt;script&amp;gt;引入
  CDN方式引入
&amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;   npm安装
npm install vue   3.hello world &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;hello&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;!--2.定义数据展示div --&amp;gt; &amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt; &amp;lt;!--4.通过表达式{{}} 获取data中定义的数据 --&amp;gt; {{ message }} &amp;lt;/div&amp;gt; &amp;lt;!--1.引入vue.js文件 --&amp;gt; &amp;lt;script src=&amp;#34;../vue.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; // 3.新建vue对象，通过属性el:id绑定到div  var app = new Vue({ el: &amp;#39;#app&amp;#39;, data: { message: &amp;#39;Hello Vue!&amp;#39; } }) &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 4.</description>
    </item>
    
    <item>
      <title>win右键添加此处打开cmd</title>
      <link>https://damao2017.github.io/post/win%E5%8F%B3%E9%94%AE%E6%B7%BB%E5%8A%A0%E6%AD%A4%E5%A4%84%E6%89%93%E5%BC%80cmd/</link>
      <pubDate>Tue, 03 Dec 2019 16:21:23 +0800</pubDate>
      
      <guid>https://damao2017.github.io/post/win%E5%8F%B3%E9%94%AE%E6%B7%BB%E5%8A%A0%E6%AD%A4%E5%A4%84%E6%89%93%E5%BC%80cmd/</guid>
      <description>1.右键显示此处打开CMD 新建一个txt文件，格式一定要是ANSI的，然后输入以下内容，修改后缀名为.reg，双击导入注册表。
好处是都不用按shift右键了，直接右键就有。win10默认的是打开power shell。
Windows Registry Editor Version 5.00 [HKEY_CLASSES_ROOT\Directory\Background\shell\在此处打开 CMD] &amp;quot;Icon&amp;quot;=&amp;quot;cmd.exe&amp;quot; [HKEY_CLASSES_ROOT\Directory\Background\shell\在此处打开 CMD\command] @=&amp;quot;cmd.exe /s /k pushd \&amp;quot;%V\&amp;quot;&amp;quot; 2.文件夹上右键显示此处打开CMD Windows Registry Editor Version 5.00 [HKEY_CLASSES_ROOT\Folder\shell\在此处打开 CMD] &amp;quot;Icon&amp;quot;=&amp;quot;cmd.exe&amp;quot; [HKEY_CLASSES_ROOT\Folder\shell\在此处打开 CMD\command] @=&amp;quot;cmd.exe /k cd %1&amp;quot; </description>
    </item>
    
    <item>
      <title>hugo使用</title>
      <link>https://damao2017.github.io/post/hugo%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 28 Nov 2019 20:50:55 +0800</pubDate>
      
      <guid>https://damao2017.github.io/post/hugo%E4%BD%BF%E7%94%A8/</guid>
      <description>hugo可以将md文件变成html页面，可以方便的发布到外网服务器上   下载hugo可执行文件
我是windows平台，直接点击发布页，下载windows版本https://github.com/gohugoio/hugo/releases 
  把hugo.exe文件所在的路径加入到环境变量path中
  打开cmd，执行
 hugo new site notes
将会创建一个notes文件夹，下面有一些文件。
  文件夹内容如下
 archetypes/ --default.md 原始的md模板文件 content/ --md文件存放处 layouts/ static/ themes/ --主题文件 config.toml --配置文件   default.md模板修改如下：
+++ #默认此处应该是---,markdown显示到网页有问题，改成+++ title: &amp;quot;{{ replace .Name &amp;quot;-&amp;quot; &amp;quot; &amp;quot; | title }}&amp;quot; date: {{ .Date }} draft: false tags: [&amp;quot;&amp;quot;] ++++   下载主题文件
官方主题地址https://themes.gohugo.io/ 
选择你喜欢的主题，去github，下载全部项目zip，然后复制到themes文件夹。
我选的是这个https://github.com/yoshiharuyamashita/blackburn/archive/master.zip
最终目录为/themes/blackburn
archetypes/ exampleSite/ images/ layouts/ static/ ---/img/favicon.</description>
    </item>
    
    <item>
      <title>VUE 学习笔记</title>
      <link>https://damao2017.github.io/post/vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 28 Nov 2019 19:44:54 +0800</pubDate>
      
      <guid>https://damao2017.github.io/post/vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>VUE 学习笔记   vue cli 需要nodejs环境和webpack环境
  安装vue cli
npm install @vue/cli -g   查看版本
vue --version   拉取cli 2.x模板
npm install @vue/cli-init -g   2.x创建项目
vue init webpack my-project-name   3创建项目
vue create my-project-name runtime+compiler:template-&amp;gt;ast-&amp;gt;render-&amp;gt;vdom-&amp;gt;UI runtime+only: render-&amp;gt;vdom-&amp;gt;UI runtime+only 性能更高，需要的文件越小，以后主要用这个 main.js里面的写法不同 render : function(createElement){ //直接使用render将app模块覆盖index的div return createElement(app); }
  cli3 启动ui
vue ui 在创建里面选择加载项目，进入项目仪表盘，再操作项目
  安装vuex
npm install vuex --save   安装</description>
    </item>
    
    <item>
      <title>markdown语法</title>
      <link>https://damao2017.github.io/post/markdown%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Thu, 28 Nov 2019 19:25:58 +0800</pubDate>
      
      <guid>https://damao2017.github.io/post/markdown%E8%AF%AD%E6%B3%95/</guid>
      <description>markdown语法 1.1 内容目录[TOC] [TOC] [TOC]
2.0 代码 代码块​```markdownmarkdown​````单行代码`markdown单行代码
2.1 字体 **加粗***斜体****斜体加粗***~~删除~~ 加粗 斜体 斜体加粗 删除  2.2 引用 &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; 这里是一个&amp;gt;引用
   这里是两个&amp;raquo;引用
     这里是三个&amp;raquo;&amp;gt;引用
   2.3 分割线 ***---  2.4 图片 ![image-20191128100805983](.\image-20191128100805983.png &amp;#34;截图测试&amp;#34;)![alt显示在图片下面的文字，相当于对图片内容的解释](图片地址 &amp;#34;图片的标题，当鼠标移到图片上时显示的内容。title可加可不加&amp;#34;)可以截图后直接复制粘贴进typora2.5 超链接 &amp;lt;a href=&amp;#34;http://baidu.com&amp;#34; target=&amp;#34;_blank&amp;#34;&amp;gt;baidu&amp;lt;/a&amp;gt;[百度](http://baidu.com)按ctrl鼠标点这个链接就会打开网页邮箱：&amp;lt;example@w3cschool.cn&amp;gt;网址：&amp;lt;www.baidu.com&amp;gt;---[1]:https://github.com &amp;#34;GitHub&amp;#34;[2]:https://www.</description>
    </item>
    
  </channel>
</rss>